- [Instructor] So manual testing. Something that I like to do when I first start out with testing WordPress sites for accessibility, is just to bust out the Tab key on my keyboard and start tabbing through things. So, can I get to everything on the page, right? That was one of the things that was a manual test in the Fastpass's audit of accessibility insights, that plugin. So, it's super important to make sure that everything is accessible and actionable via a keyboard. The commands you wanna use for keyboard testing is just Tab to go forward in the Tab index in the focusable elements, and then Shift + Tab to go backwards. And then if you're on a link, you can hit the Enter button to activate the link if you're focused on a link. So if I'm focused on the Skip to content link and I click Enter, it jumps to the main content. And if I am on this wp-default, it'll just reload the page. So, it'd reload that page and there it is. If I get to another item, let's see. So I can get to all of these form fields. So, here I've got a check box, I can hit the Space bar. And if I hit the Space bar, it checks and unchecks that box. And I had an error because I didn't fill out the required fields because I hit Enter. And so the Enter will submit the form if you're on the check box. Enter will also submit the form if you're on that button itself or the Space bar. So, I can either post a comment or not there, but I can get to all of this with the keyboard. Super important to be able to do that. The other things that I look for are headings and page structure. We talked a bit about that. Headings and page structure, if you use this web developer tool bar, you can view the document outline and that's great. You can see the headings and this is the headings for my actual slideshow here. So the slide show is all one page. So we have all of the headings listed here and it's in a logical order, but we can do that on a WordPress page itself. So we can go to My inaccessible post, which is now more accessible according to the checks that we ran on it. And once this loads up, I should probably move back to my local environment so it moves faster for us, but yeah, here's the heading structure here, listed out. You can also just turn off CSS and you can take a look at that. So, let's disable all styles. And here we have the page linearized. It doesn't exactly tell you the full structure, like the document outline does, or like Wave did with its document structure but you can certainly do that. Then there are also bookmarklets that I like a lot, so, let's see. Let me re-enable styles. And I have bookmarklets for accessibility checking, where you can see all the headings. So this will give you the heading levels of anything that is a heading. Oh, look at that. There's a heading level three here that appears blank. That would be something for me to take a look at and see why is that? Is that really a blank heading? Is that there for assistive technology users where that's a heading that's screen reader-friendly? I don't know. But that would be something to take a look at based on just a quick check of headings. Contrast, checking for contrast is something that you'll want to do. You can do that in the browser, you can do that with tools like the Color Contrast Analyzer. Do I have that? I don't think I do have it here. So, Color Contrast Analyzer by the Paciello Group. They are now a part of Freedom Scientific, but they put out a free tool that you can use to check color contrast and you can use an eyedropper just to test all of that. Of course, testing in the browser, super easy to do now with our modern browser tools. So, you just find the color of the text for that particular item. So I'm gonna look for that color in the browser. And there it is, it's black. It's 17.78 to one against that light gray background. So it passes double A and triple A guidelines. So that's great. So we know we can do that right there in the browser. Let's keep moving. Contextual Links, we talked about the read more links. So looking at the links and making sure that you don't have a ton of the same links on the page. Using text resize and zooms. So zooming into 200%. On my computer it's Command + and you just keep repeating that. So I can zoom in in Chrome by just hitting Command + + and that's with any browser. I think on Windows, it'll be CTRL + + and you can just zoom in and make sure that nothing overlaps or causes horizontal scrolling when you get to a certain size, like 200%. You can go to extremes like 400% or more and that's certainly a valid way to test, super quick to test that way, too. Testing the resizing of text only, you can do that with Firefox quite easily. That's also recommended to do that. So parsing and validation. A lot of the automated tools with this for you, but you can also run any of your pages through the tool provided by the W3C. It's the validator, it's the new validator so W3C validator. You can run something through there and basically knowing if a page validates or not can give you hints that whether or not there are accessibility issues. And then, of course, you have screen reader testing, so.