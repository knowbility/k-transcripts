- [Robert Jolly] So I have a Wordpress default install that I have running locally and as a developer it's good to be able to do this. We typically like to develop locally and use source control wherever we can, source-code management, something like Git or one of its variant flavors of source-code management. But basically, I just installed a Wordpress site and here I'm logged into the admin interface, but I just loaded up the page and I'm just going to hit Tab. So here we can see that in Wordpress, the defaults are already ... I can see that there are some accessibility supports. So I can skip to the Toolbar, I can hit Tab again and another link appears on my screen. Skip to the content. So this is called bypass blocks, right? And this is something that's just built into Wordpress. I believe this is running 2019, the theme, one of the default themes with the latest version of Wordpress. So then I can keep tabbing and I can see where I am. The focus outlines aren't great here. I'm using Chrome and the Edit button has a focus outline on it and if I tab down again, I'm in the comments section. If I tab again, Post Comment gets a nice color change plus an outline around it. So I can see that there are keyboard supports. I'm going through the links from the sidebar widgets here that are at the bottom of the page. So if I'm a sighted-keyboard-only user, I can get to the content on the page and all of the links and whatnot. So I've got a lot of links here, which is just a result of seeding the content with some random content for theme development. So you can see I'm hitting Shift Tab and I'm going back up all the links. So that's great. Other things that I'm looking at right now, just to the naked eye my text contrast seems very good in here. Of course, this is 2019 and it's not a very design-heavy theme, so there may not be many, if any, contrast issues. But I can give it a test as well, so I can inspect the content and I can look at the color here if I open up Chrome. And this blue against white has a contrast ratio of 5.2 to 1, which means it passes the double-A and triple-A guidelines since this is large text. So the Wordpress defaults here, really good at first glance, just without even doing anything fancy. I'm not firing up a screen reader here, I'm just poking around at it. Some other things that we can look at with accessibility in terms of the defaults is we can look at the document outline. And our front page here has an excellent heading structure. So by just looking at the document outline in web developer tools, the outline shows that my title, which is Front Page, is here as the heading level one. Then we have some other heading levels that are nested appropriately, and looks good. There are a few other things that we can do. We can run an automated test on this, as well. So if we do, say, Accessibility Insights For the Web, we can just run an automated scan very quickly, and no failures were detected on this page. So it passed the automated scans right away. That doesn't necessarily mean that it's 100% accessible as-is, but it means what could be tested in an automated fashion, passed and didn't highlight any issues. Let's see, we have someone chatting. Okay, yep, there's web developer tools link. Thank you, Christopher, for sharing that link. And Accessibility Insights for the Web is also something that you can get from the Chrome webstore. It's also a Windows application if you want to run it as a Windows application. On a Mac, you have to use it as a browser extension in Chrome. So I'll close out of that. Now some of the other accessibilty features in Wordpress that come in kind of by default are the media library. So there is a built-in way that you can add alternative text, any image. So this image doesn't have it, so it was pulled in, but let's give it a ... It's an image of a leaf with water droplets on it, maybe dew. So I will just put, "Leaf with dewdrops," as the alternative text. And it says here underneath the alternative text image box in the media library attachment details screen, it says, "Describe the purpose of the image," and has a link, and then it says, "Leave empty if the image is purely decorative." So that's great. So if you do have just a decorative image that is not content on the page or the content on the page describes the image and it's not needed in terms of alternative text, then you can leave that empty. You could see that the title was also pre-populated with, it looked like machine-generated content, maybe a file name, so I pulled that out, that title. And we can now, I think, update the image. Let's see. Yeah, it saves it automatically if I click into a different area. So that image now has an alt text on it. And if the theme is constructed properly then if you're pulling in an image, say a featured image or just pulling in an image in your theme, you can ensure that the alt text is presented if it exists. And if not, you can ensure that it's blank so that the image comes across as decorative. Almost all of the backend interface of Wordpress is accessible, the default install, that is. So other plugins may add administrative areas and functionality within your admin section of the site. So those bits may or may not be accessible, depending on how the plugin author or theme author constructed their admin interface widgets. But you can rest assured that, if you have someone with a disability on your team who needs to edit content, the Wordpress system itself is not a limiting factor in almost all cases. There may be some known issues, but in large part, I've heard, and heard from people with disabilities, that authoring content in Wordpress is indeed possible if you have a disability or you use assistive technology, and it works pretty well. So we've talked about some of the Wordpress defaults. I think we can certainly talk about more of the defaults, as well. Okay, so Karen asked, "Please clarify how you enter the test and inspection tools." So in almost all modern browsers, and I think probably every modern browser, there is a code inspection area. So what I do in Chrome, you can either ... On a Mac, you can control-click, which is basically a right click, and you can choose Inspect. On a Mac, you can also hit Option Command I, and that will open up the inspector. This is what's called the inspector at the bottom of my screen here. So the inspector shows the rendered document object model. So this is the rendered code that the browser is interpreting and it will basically show you, after JavaScript has added any content, if you're using something that's JavaScript powered. If any content is hidden, it will take into account that and that inspector works in that way. So like if I inspect the front page of this Wordpress test site now. So you can see here on my screen that I can look at the head of the page and I can look at the title. So it does have a title, which is good. That's an important accessibility check. It has a language declaration. So Wordpress will put this in by default. Now if your theme developer has made a change, that could break that. Wordpress defaults always provide a language according to the language that you set in your Wordpress dashboard. So the language of your site. So if you had a Spanish site, then it would have ES and then potentially a locale next to it. So this language attribute here on the HTML element says EN-US. That means US English. It could just say EN and that's totally fine as well. So one thing you can do as you're working in Wordpress, just to test things out in a non-disruptive way, is you can use the inspector to take a look at something and then over on the ... So if I'm highlighting this front page and it has a class of entry title on the heading level one. So it has a margin of zero on it and it has a few other styling declarations in CSS. So I can add something else to it. Like I can change its color to color ... I'll change it to ... Well, I can change it to any color here. Violet, right? So violet would change it to a violet color against that white background. And of course, if we open the color picker we're going to see the contrast ratio in the color picker does not meet the double-A accessibility guidelines of three to one here for that large text. So I might need to pick a different color here for that. So I could do an eye dropper. Let's see if I can do that eye dropper. I don't think I can. But I can choose a different color from here and it will give me contrast ratios on the fly. Or yeah, I can change it with this wheel. So you can do non-destructive changes in Wordpress using the inspector. Or any site, for that matter. You don't have to have even access to the source code to change things. Now, of course they don't get saved on the server, they don't get saved in the template files. So once you refresh, those changes go away. But it's an interesting thing to work on. And I hope that answered the question about how to enter the text and inspection tools. So we do have those for Firefox and for Safari. Edge has them. If you're on Windows, in Windows, it's pretty much the same thing. So here, we can inspect in Firefox, the same way that we do with Chrome. It has, obviously, a different look to it, but there are some very neat tools in the different browsers. So you can turn on accessibility features to check out certain things. So there's an accessibility inspector here. So in Firefox, if you click on the Pick an Accessible Object from this page button in the inspector, then if you get to a particular piece of content, it will tell you what it is. So these are text leaves that I am hovering over, or inspecting at this point. It says that it's a paragraph and it tells me what the content is, but also what the contrast ratio is. And then if I click on it, it just sticks with that and it gives me the different attributes of it. So it basically says what role it is and what name it has. So very handy when you are looking for the accessibility of, say, a form field, right? So let's look at this form field here. And this is a role of entry, and it has a label assigned to it. So the name of that is Name with an asterisk next to it to indicate that it's a required field. And it says that it has the required attribute on it. So if we look at just the inspector for this, we can look at that as well. So let's see. Inspect Element. So this has the required equals required attribute and it has the label for author and then it has the ID of author. So it says name and then it says, "Span class required," with the asterisks on it. So this is what was coming out with the inspector. So you can take a look at what the accessibility aspects of any piece of content on a webpage is through the web inspector. And we'll see more of this as we go through how to check for accessibility, as well.